from googletrans import Translator
import streamlit as st

from detect.detect_ai import *
from models.llama import llama_gen
from models.gemma import gemma_gen
from models.qwen2 import qwen2_gen
from models.phi3 import phi3_gen
from func.utils import *

def main():
    st.set_page_config(page_title="–ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞ –ò–ò", page_icon="ü§ñ")

    st.title("ü§ñ –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Å–ª–µ–¥—ã –ò–ò –∏ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ")

    st.write("""
    –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ! –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–ª–µ–¥–æ–≤ –ò–ò –∏ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è SEO.
    """)

    tab1, tab2 = st.tabs(["–ê–Ω–∞–ª–∏–∑ —Å–ª–µ–¥–æ–≤ –ò–ò", "–ü–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞"])

    with tab1:
        st.info("""
–ú–æ–¥–µ–ª—å AI-–¥–µ—Ç–µ–∫—Ç–æ—Ä–∞ DistilBERT

–≠—Ç–∞ –º–æ–¥–µ–ª—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è, –±—ã–ª –ª–∏ —Ç–µ–∫—Å—Ç –Ω–∞–ø–∏—Å–∞–Ω —á–µ–ª–æ–≤–µ–∫–æ–º –∏–ª–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º. –û–Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ DistilBERT –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—ã—Å–æ–∫—É—é —Ç–æ—á–Ω–æ—Å—Ç—å –≤ —Å–≤–æ–∏—Ö –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è—Ö.

–û—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–æ–¥–µ–ª–∏:
- –¢–æ—á–Ω–æ—Å—Ç—å –Ω–∞ –æ–±—É—á–∞—é—â–µ–º –Ω–∞–±–æ—Ä–µ –¥–∞–Ω–Ω—ã—Ö: 99.83%
- –¢–æ—á–Ω–æ—Å—Ç—å –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–º –Ω–∞–±–æ—Ä–µ –¥–∞–Ω–Ω—ã—Ö: 99.58%

–≠—Ç–∞ –º–æ–¥–µ–ª—å –ø–æ–º–æ–≥–∞–µ—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç—ã –∏ –≤—ã—è–≤–ª—è—Ç—å, –≥–¥–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã —Ç–µ–∫—Å—Ç–∞.
""")

        st.header("–ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–ª–µ–¥–æ–≤ –ò–ò")
        user_text = st.text_area("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
        if st.button("–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å"):
            if user_text:
                results = classify_text(user_text)
                human_score = None
                ai_score = None

                for result in results:
                    label = result['label']
                    score_percent = result['score']
                    
                    if label == 'human':
                        human_score = score_percent
                    elif label == 'AI':
                        ai_score = score_percent
                
                if human_score is not None:
                    st.markdown(
                        f"""
                        <div style="padding: 10px; border-radius: 5px; background-color: green; color: white; font-weight: bold; text-align: center;">
                            –û—Ü–µ–Ω–∫–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è —Å–ª–µ–¥–æ–≤ —á–µ–ª–æ–≤–µ–∫–∞ (human): {human_score}%
                        </div>
                        <div style="padding: 10px; border-radius: 5px; background-color: red; color: white; font-weight: bold; text-align: center;margin-top: 15px;">
                            –û—Ü–µ–Ω–∫–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è —Å–ª–µ–¥–æ–≤ –ò–ò (AI): {percentage_to_100(human_score)}%
                        </div>
       
       
                        """, unsafe_allow_html=True
                    )
                if ai_score is not None:
                    st.markdown(
                        f"""
                        <div style="padding: 10px; border-radius: 5px; background-color: red; color: white; font-weight: bold; text-align: center;">
                            –û—Ü–µ–Ω–∫–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è —Å–ª–µ–¥–æ–≤ –ò–ò (AI): {ai_score}%
                        </div>
                        
                        <div style="padding: 10px; border-radius: 5px; background-color: green; color: white; font-weight: bold; text-align: center; margin-top: 15px;">
                            –û—Ü–µ–Ω–∫–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è —Å–ª–µ–¥–æ–≤ —á–µ–ª–æ–≤–µ–∫–∞ (human): {percentage_to_100(ai_score)}%
                        </div>
                        """, unsafe_allow_html=True
                        )
           
            else:
                st.info("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")


    with tab2:
        st.header("–ü–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞")
        user_text = st.text_area("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏—è")
        rewrite_method = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏—è", ["llama3", "qwen2", "Gemma", "phi3", "–¶–µ–ø–∏ –ú–∞—Ä–∫–æ–≤–∞"])
        
        if rewrite_method == "–¶–µ–ø–∏ –ú–∞—Ä–∫–æ–≤–∞":
            st.info("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –º–µ—Ç–æ–¥–æ–º —Ü–µ–ø–µ–π –ú–∞—Ä–∫–æ–≤–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª—É—á—à–∏–º —Ä–µ—à–µ–Ω–∏–µ–º –¥–ª—è –ø–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä–æ–≤–∞–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑—É–º–Ω–æ.")
        
        if st.button("–ü–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å"):
            if user_text:
                
                if rewrite_method == "qwen2":
                    qwen2_text = qwen2_gen(user_text)
                    st.write("–ü–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:")
                
                    st.write(qwen2_text)
                    
                if rewrite_method == "phi3":
                    phi3_text = phi3_gen(user_text)
                    st.write("–ü–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:")
                
                    st.write(phi3_text)
                    
                    
                if rewrite_method == "Gemma":
                    gemma_text = gemma_gen(user_text)
                    st.write("–ü–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:")
                    
                    st.write(gemma_text)
                    
                if rewrite_method == "llama3":
                    llama_text = llama_gen(user_text)
                    st.write("–ü–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:")
                
                    st.write(llama_text)
                    
                    
                if rewrite_method == "–¶–µ–ø–∏ –ú–∞—Ä–∫–æ–≤–∞":
                    rephrased_text = makarov_chain_rewrite(user_text)
                    st.write("–ü–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:")
                    st.write(rephrased_text)
            else:
                st.info("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏—è.")

if __name__ == "__main__":
    main()
